name: Auto Comment

on:
  issue_comment:
    types: [created, edited, deleted]
  pull_request:
    types: [opened, synchronize, reopened, closed]

jobs:
  auto-comment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install PyGithub
          
      - name: Add comment to Issue or PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          import os
          import json
          from github import Github

          # GitHub 객체 초기화
          g = Github(os.environ['GITHUB_TOKEN'])
          repo = g.get_repo(os.environ['GITHUB_REPOSITORY'])

          # 이벤트 정보 가져오기
          with open(os.environ['GITHUB_EVENT_PATH']) as f:
              event = json.load(f)

          # 이슈 또는 PR 번호 가져오기
          if 'issue' in event:
              issue_number = event['issue']['number']
          elif 'pull_request' in event:
              issue_number = event['pull_request']['number']
          else:
              raise ValueError("Unable to determine issue or pull request number")

          # 이슈 또는 PR 객체 가져오기
          issue = repo.get_issue(number=issue_number)

          # 댓글 내용 생성
          comment_body = "확인 필요"

          # 댓글 추가
          issue.create_comment(comment_body)

          print(f"댓글이 성공적으로 추가되었습니다. (이슈/PR #{issue_number})")
        shell: python